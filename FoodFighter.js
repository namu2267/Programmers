/*푸드 파이트 대회
https://school.programmers.co.kr/learn/courses/30/lessons/134240

문제 설명
수웅이는 매달 주어진 음식을 빨리 먹는 푸드 파이트 대회를 개최합니다. 이 대회에서 선수들은 1대 1로 대결하며, 매 대결마다 음식의 종류와 양이 바뀝니다. 대결은 준비된 음식들을 일렬로 배치한 뒤, 한 선수는 제일 왼쪽에 있는 음식부터 오른쪽으로, 다른 선수는 제일 오른쪽에 있는 음식부터 왼쪽으로 순서대로 먹는 방식으로 진행됩니다. 중앙에는 물을 배치하고, 물을 먼저 먹는 선수가 승리하게 됩니다.

이때, 대회의 공정성을 위해 두 선수가 먹는 음식의 종류와 양이 같아야 하며, 음식을 먹는 순서도 같아야 합니다. 또한, 이번 대회부터는 칼로리가 낮은 음식을 먼저 먹을 수 있게 배치하여 선수들이 음식을 더 잘 먹을 수 있게 하려고 합니다. 이번 대회를 위해 수웅이는 음식을 주문했는데, 대회의 조건을 고려하지 않고 음식을 주문하여 몇 개의 음식은 대회에 사용하지 못하게 되었습니다.

예를 들어, 3가지의 음식이 준비되어 있으며, 칼로리가 적은 순서대로 1번 음식을 3개, 2번 음식을 4개, 3번 음식을 6개 준비했으며, 물을 편의상 0번 음식이라고 칭한다면, 두 선수는 1번 음식 1개, 2번 음식 2개, 3번 음식 3개씩을 먹게 되므로 음식의 배치는 "1223330333221"이 됩니다. 따라서 1번 음식 1개는 대회에 사용하지 못합니다.

수웅이가 준비한 음식의 양을 칼로리가 적은 순서대로 나타내는 정수 배열 food가 주어졌을 때, 대회를 위한 음식의 배치를 나타내는 문자열을 return 하는 solution 함수를 완성해주세요.*/

// 중첩for문, Math.floor(), toString(), reverse(), join()
function solution(food) {
  temp = "";
  for (i = 1; i < food.length; i++) {
    let count = Math.floor(food[i] / 2);

    for (j = 0; j < count; j++) {
      temp += i.toString();
    }
  }
  return temp + "0" + [...temp].reverse().join("");
}

/* 공부내용 정리 블로그
https://hihiha2.tistory.com/144

제한사항을 제대로 체크하지 못해서 코드를 2개나 만들었지만 테스트만 통과하고 최종으로 통과하지 못했다. 역시 문제를 제대로 읽는것이 중요하다는 것을 느꼈다.
중첩 for문을 통해서 i를 1부터 시작해서 food의 길이만큼 반복하면서 각요소를 2로 나눈 몫만큼을 횟수로 해서 temp라는 변수에 더한다.
마지막으로 이 값을 뒤집에서 뒷부분을 만들고 앞부분+"0"+뒷부분을 통해서 최종적인 값을 구한다.

for문안에서 바로 repeat을 통해서 처리하면 굳이 중첩 for문을 사용할 필요가 없다.
각각 player1,player2로 지정하여 push와 unshift로 뒤에서부터 또 앞에서부터 배열에 값을 추가하는 방식도 코드가 직관적이라 좋았다. 
*/